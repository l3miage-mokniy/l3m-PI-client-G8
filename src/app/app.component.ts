import { element } from 'protractor';
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { OSM_TILE_LAYER_URL } from '@yaga/leaflet-ng2';
export type MenuSelected  = 'menuConnect' | 'menuDisconnect';
import {UtilisateurService} from './utilisateur.service';
import {ChallengeService} from './challenge.service';
import { Observable } from 'rxjs';
import { Chami, Challenge, User } from "./AllDefinitions";
import firebase from 'firebase/app';
import * as GeoJSON from 'geojson';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss'],
  changeDetection: ChangeDetectionStrategy.OnPush
})

export class AppComponent {
  lignes?: any;
  dataIconGoogle = 'assets/images/iconGoogle.png';
  iconMarker = 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Map_marker.svg/585px-Map_marker.svg.png';
  tileLayerUrl = OSM_TILE_LAYER_URL;
  public menuSelected!: MenuSelected;
  constructor(private UserService: UtilisateurService, private ChallengeService: ChallengeService) {
    this.recupUser();
    this.recupDefi();
    this.recupDefiUnUser()
    this.getlignes();
  }

  get obsChamis(): Observable<Chami[]> {
    return this.UserService.chamisObs;
  }

  get obsChallenges(): Observable<Challenge[]> {
    return this.ChallengeService.obsAllChall;
  }

  get obsChallUser(): Observable<Challenge[]> {
    return this.ChallengeService.obsChallUser;
  }

  get obsLogin(): Observable<firebase.User | null> {
    return this.UserService.auth.user;
  }

  get obsUser(): Observable<User | undefined> {
    return this.UserService.userObs;
  }

  //get tst(): Observable<Chami | User | undefined> | undefined{
    //return this.UserService.merged;
  //}

  login() {
    this.UserService.login();
  }

  logout() {
    this.UserService.logout();
  }

  recupUser() {
    this.UserService.getAllUsers();
  }
  recupDefi() {
    this.ChallengeService.getAllChallenge();
  }

  recupDefiUnUser() {
    if(this.UserService.userObs !== undefined) {
      //this.ChallengeService.getAllChallengeOfAnUsers(this.UserService.userObs.chami);
    }
  }

  createUserV2(name:string,a:string) {
    console.log(name,a);
    this.UserService.postUser({
      pseudo: name,
      age: +a,
      ville:'',
      description:'',
      email:''
    })
  }

  updateUser(age:string,ville:string,description:string,mail:string) {
      this.UserService.putUser({
        pseudo: mail,
        age: +age,
        ville: ville,
        description:description,
        email:mail
      })
  }

  get tst(): Observable<Chami> {
    return this.UserService.newRegisteredChamiObs;
  }
  tstv2() {
    this.UserService.tst();
  }

  ligne(): any {
    const ligne = '{"type": "Feature","geometry": {"type":"MultiLineString","coordinates":[[[5.74256,45.16492],[5.7426,45.16484],[5.74248,45.16479],[5.74225,45.16473],[5.74221,45.16471],[5.74204,45.16458],[5.74152,45.16424],[5.7413,45.16412],[5.74138,45.16407],[5.74187,45.16375],[5.74214,45.16356],[5.74216,45.16346],[5.74213,45.16315],[5.74181,45.16217],[5.74162,45.16151],[5.74154,45.16136],[5.74144,45.1613],[5.74133,45.16128],[5.74121,45.16129],[5.74101,45.16133],[5.74082,45.16139],[5.7406,45.16144],[5.74046,45.16146],[5.74036,45.16145],[5.7403,45.16141],[5.73912,45.16054],[5.73901,45.16051],[5.73888,45.16045],[5.73884,45.16041],[5.7388,45.16033],[5.73881,45.16028],[5.73883,45.16024],[5.73886,45.16017],[5.73888,45.16011],[5.73889,45.16006],[5.73893,45.15998],[5.7389,45.15992],[5.73884,45.15986],[5.7388,45.15982],[5.73875,45.15979],[5.73863,45.15975],[5.73841,45.1597],[5.73829,45.15967],[5.73822,45.15965],[5.73739,45.15951],[5.73692,45.15944],[5.73645,45.15939],[5.73616,45.15936],[5.73481,45.15928],[5.73459,45.15926],[5.73453,45.15926],[5.73449,45.15926],[5.7344,45.15926],[5.73428,45.15928],[5.73421,45.15928],[5.73417,45.1593],[5.73408,45.15932],[5.73399,45.15935],[5.73389,45.15939],[5.73376,45.15941],[5.73366,45.15941],[5.73356,45.15939],[5.73347,45.15936],[5.73339,45.15932],[5.73333,45.15927],[5.73327,45.15919],[5.73323,45.15909],[5.7332,45.15902],[5.73317,45.15897],[5.73312,45.15893],[5.73307,45.15891],[5.73296,45.1589],[5.7327,45.15889],[5.73244,45.15888],[5.73218,45.15888],[5.73191,45.15888],[5.73177,45.15888],[5.73169,45.15889],[5.73163,45.15892],[5.73157,45.15895],[5.73146,45.159],[5.73126,45.15908],[5.7311,45.15915],[5.73102,45.15918],[5.73089,45.15922],[5.73079,45.15924],[5.73044,45.15933],[5.72993,45.15932],[5.72949,45.15931],[5.72905,45.15929],[5.72896,45.15928],[5.72874,45.15928],[5.72829,45.15929],[5.72771,45.1593],[5.72758,45.1593],[5.72702,45.15932],[5.72688,45.15933],[5.72667,45.15933],[5.72653,45.15934],[5.72647,45.15934],[5.72637,45.15935],[5.72565,45.15939],[5.72458,45.15951],[5.72429,45.15954],[5.72415,45.15955],[5.72408,45.15957],[5.72379,45.15961],[5.72358,45.15965],[5.72335,45.15968],[5.72324,45.1597],[5.72309,45.15972],[5.72275,45.15978],[5.72218,45.1599],[5.72147,45.16007],[5.72128,45.16013],[5.7211,45.16019],[5.721,45.16027],[5.72093,45.16033],[5.72089,45.1604],[5.72083,45.16048],[5.72074,45.16056],[5.72064,45.16062],[5.72046,45.16067],[5.72039,45.16067],[5.7203,45.16068],[5.72017,45.16068],[5.72001,45.16065],[5.71982,45.1606],[5.71958,45.16059],[5.71942,45.1606],[5.71923,45.16063],[5.7178,45.16118],[5.71718,45.16145],[5.71661,45.16169],[5.71628,45.16183],[5.71623,45.16185],[5.71613,45.16189],[5.71606,45.16193],[5.71594,45.16198],[5.71584,45.16202],[5.71545,45.16216],[5.71496,45.16237],[5.71473,45.16248],[5.71449,45.16259],[5.71327,45.1632],[5.71294,45.16336],[5.71264,45.16363],[5.71197,45.164],[5.7114,45.16429],[5.71127,45.16435],[5.71117,45.1644],[5.71104,45.16447],[5.71092,45.16452],[5.71074,45.16461],[5.71059,45.16468],[5.71042,45.16477],[5.70912,45.16542],[5.70878,45.16554],[5.70793,45.16598],[5.70667,45.16663],[5.70658,45.16668],[5.7064,45.16677],[5.70624,45.16685],[5.70609,45.16693],[5.70543,45.16726],[5.70513,45.16741],[5.70504,45.16746],[5.70487,45.16762],[5.70482,45.16769],[5.70481,45.16777],[5.70482,45.16783],[5.70482,45.16785],[5.70481,45.16792],[5.70478,45.16803],[5.70481,45.1682],[5.70484,45.16858],[5.70484,45.16861],[5.70484,45.16863],[5.70484,45.16864],[5.70485,45.16876],[5.70487,45.16913],[5.70492,45.1697],[5.70494,45.17037],[5.70492,45.17066],[5.70498,45.17178],[5.70498,45.17183],[5.70498,45.17192],[5.70499,45.17203],[5.70499,45.17208],[5.705,45.17216],[5.70502,45.1725],[5.70624,45.17243],[5.70634,45.17242],[5.70644,45.17242],[5.70665,45.17241],[5.70669,45.17241],[5.70676,45.1724],[5.70685,45.1724],[5.7077,45.17236],[5.70778,45.17287],[5.70781,45.17297],[5.70786,45.17316],[5.70792,45.17339],[5.70793,45.17342],[5.70806,45.17377],[5.70833,45.17437],[5.70835,45.17442],[5.70839,45.1745],[5.70842,45.17458],[5.70853,45.17483],[5.70856,45.1749],[5.70858,45.17494],[5.70861,45.17501],[5.70865,45.1751],[5.70878,45.1754],[5.70881,45.17545],[5.70884,45.1755],[5.70887,45.17557],[5.70892,45.17566],[5.70896,45.17575],[5.70912,45.17604],[5.70937,45.17652],[5.70941,45.17658],[5.70983,45.17722],[5.70988,45.17729],[5.70993,45.17738],[5.71017,45.17778],[5.71028,45.17795],[5.71032,45.17801],[5.71037,45.1781],[5.71047,45.17823],[5.71049,45.17825],[5.71053,45.17829],[5.71097,45.17883],[5.71115,45.17904],[5.71129,45.17916],[5.71143,45.17929],[5.71147,45.17933],[5.71147,45.17941],[5.71148,45.17949],[5.71143,45.17972],[5.71139,45.17997],[5.71139,45.17999],[5.71138,45.18007],[5.71135,45.18024],[5.71134,45.18032],[5.71134,45.18034],[5.71132,45.18047],[5.71132,45.18049],[5.71131,45.18055],[5.71125,45.18114],[5.71135,45.18169],[5.7115,45.18255],[5.71151,45.18258],[5.71153,45.18266],[5.71165,45.18327],[5.71166,45.18331],[5.71169,45.18345],[5.71176,45.18381],[5.71177,45.18389],[5.71179,45.18397],[5.71185,45.18423],[5.71186,45.18427],[5.71192,45.18453],[5.71203,45.18498],[5.71203,45.185],[5.71215,45.18563],[5.71216,45.18569],[5.71225,45.18571],[5.71311,45.18585],[5.7133,45.18588],[5.7135,45.18589],[5.71357,45.18589],[5.7137,45.18589],[5.71389,45.18589],[5.71407,45.1859],[5.71416,45.1859],[5.71423,45.18589],[5.71443,45.18589],[5.71455,45.18589],[5.71506,45.1859],[5.71513,45.1859],[5.71556,45.18591],[5.71564,45.18591],[5.71593,45.18592],[5.7165,45.18593],[5.7166,45.18593],[5.71687,45.18591],[5.71697,45.18591],[5.71709,45.18591],[5.71718,45.1859],[5.71726,45.1859],[5.71742,45.1859],[5.7175,45.18589],[5.71804,45.18588],[5.7181,45.18588],[5.71812,45.18587],[5.7184,45.18586],[5.71849,45.18585],[5.71852,45.18585],[5.71863,45.18584],[5.71885,45.18581],[5.71893,45.1858],[5.71933,45.18575],[5.71944,45.18574],[5.71997,45.18568],[5.72011,45.18566],[5.72029,45.18564],[5.72042,45.18563],[5.7205,45.18561],[5.72073,45.18559],[5.72144,45.1855],[5.72202,45.18544],[5.72209,45.18533],[5.72223,45.18528],[5.72239,45.18526],[5.72292,45.18546],[5.72319,45.18558],[5.72324,45.1856],[5.72402,45.18589],[5.72444,45.18604],[5.7245,45.18606],[5.72469,45.18613],[5.7248,45.18617],[5.72488,45.1862],[5.72493,45.18622],[5.72494,45.18622],[5.72502,45.18626],[5.72503,45.18626],[5.72512,45.18629],[5.72617,45.18667],[5.72645,45.18677],[5.72651,45.18679],[5.72679,45.1869],[5.72684,45.18691],[5.72701,45.18698],[5.72706,45.18699],[5.72713,45.18702],[5.72729,45.18707],[5.72733,45.18709],[5.72737,45.1871],[5.72752,45.18716],[5.72768,45.18722],[5.72774,45.18724],[5.728,45.18733],[5.72847,45.1875],[5.72862,45.18756],[5.72871,45.18759],[5.72889,45.18766],[5.72903,45.1877],[5.72925,45.18778],[5.73013,45.18808],[5.73082,45.18832],[5.73101,45.18839],[5.73108,45.18842],[5.73118,45.18845],[5.73124,45.18848],[5.73129,45.18849],[5.73132,45.18851],[5.73138,45.18852],[5.73141,45.18852],[5.73145,45.18852],[5.73155,45.18849],[5.73171,45.18829],[5.73175,45.18825],[5.73182,45.18824],[5.73189,45.18827],[5.73222,45.18837],[5.73249,45.18847],[5.73267,45.18851],[5.73301,45.18862],[5.73303,45.18863],[5.7331,45.18864],[5.73317,45.18864],[5.73333,45.18863],[5.73334,45.18863],[5.73336,45.18863],[5.73339,45.18863],[5.73355,45.18864],[5.73439,45.18869],[5.73464,45.18871],[5.73483,45.18872],[5.736,45.18879],[5.73619,45.18879],[5.73631,45.18879],[5.7366,45.18878],[5.73685,45.1888],[5.73696,45.18881],[5.73709,45.18883],[5.73734,45.18887],[5.73819,45.18892],[5.73824,45.18893],[5.73864,45.18895],[5.7388,45.18896],[5.73888,45.18896],[5.73892,45.18896],[5.73896,45.18896],[5.73967,45.18898],[5.73994,45.189],[5.74022,45.189],[5.74038,45.18897],[5.74055,45.18888],[5.74084,45.18868],[5.74088,45.18865],[5.74136,45.18831],[5.74166,45.188],[5.74183,45.18781],[5.74198,45.1876],[5.74207,45.18741],[5.7421,45.18735],[5.74217,45.18721],[5.7422,45.18714],[5.74221,45.18712],[5.74222,45.1871],[5.74232,45.18691],[5.74274,45.18597],[5.74279,45.18588],[5.74285,45.18579],[5.74293,45.18565],[5.74296,45.18559],[5.74312,45.18529],[5.74321,45.1851],[5.74324,45.18504],[5.74325,45.18502],[5.74329,45.18492],[5.74354,45.18436],[5.74367,45.18409],[5.74382,45.18375],[5.74384,45.18371],[5.74414,45.18303],[5.74421,45.18289],[5.74454,45.18215],[5.74474,45.18172],[5.7448,45.18161],[5.74499,45.18167],[5.74513,45.18172],[5.74521,45.18175],[5.74533,45.18178],[5.74552,45.18185],[5.7457,45.1819],[5.7458,45.18194],[5.74588,45.18196],[5.74592,45.18198],[5.74636,45.18212],[5.74653,45.18219],[5.74694,45.18232],[5.74707,45.18235],[5.74723,45.18237],[5.74755,45.1824],[5.74768,45.18242],[5.74784,45.18244],[5.74786,45.18234],[5.74792,45.18223],[5.74799,45.18216],[5.74804,45.18212],[5.74814,45.18206],[5.74821,45.18202],[5.74843,45.1819],[5.74847,45.18188],[5.7485,45.18186],[5.74881,45.18167],[5.74889,45.18163],[5.74926,45.18142],[5.7497,45.18118],[5.74997,45.18104],[5.7502,45.18091],[5.75034,45.18082],[5.7504,45.18075],[5.75046,45.18065],[5.75067,45.17992],[5.75083,45.17937],[5.75086,45.1793],[5.75089,45.17921],[5.75093,45.17914],[5.75105,45.17901],[5.7511,45.17896],[5.75115,45.17891],[5.75121,45.17884],[5.7513,45.17875],[5.75134,45.17868],[5.75144,45.17849],[5.75154,45.17823],[5.75155,45.1782],[5.7516,45.1781],[5.75166,45.17792],[5.75168,45.17787],[5.75169,45.17783],[5.75175,45.17768],[5.75181,45.17748],[5.75185,45.17737],[5.75195,45.17714],[5.75207,45.17695],[5.75225,45.17668],[5.75232,45.17659],[5.75238,45.17649],[5.75243,45.17641],[5.75248,45.17631],[5.75263,45.17607],[5.75277,45.17585],[5.75288,45.17568],[5.75298,45.1756],[5.75302,45.17557],[5.75312,45.17549],[5.75326,45.17536],[5.75361,45.17504],[5.75394,45.17473],[5.75404,45.17464],[5.75411,45.17458],[5.75423,45.17449],[5.75426,45.17446],[5.75431,45.17442],[5.75496,45.1739],[5.75523,45.17366],[5.75531,45.1736],[5.75541,45.17352],[5.75545,45.17349],[5.75558,45.17339],[5.75651,45.17259],[5.75669,45.17245],[5.75704,45.17216],[5.75705,45.17215],[5.75712,45.1721],[5.75717,45.17205],[5.75724,45.17198],[5.75731,45.17192],[5.75737,45.17187],[5.75749,45.17175],[5.75754,45.17171],[5.75808,45.17126],[5.7582,45.17116],[5.75838,45.17101],[5.75846,45.17094],[5.75852,45.17089],[5.75854,45.17087],[5.75859,45.17083],[5.75867,45.17077],[5.75879,45.17066],[5.75894,45.17054],[5.75909,45.17041],[5.75911,45.1704],[5.75912,45.17039],[5.75923,45.17029],[5.75931,45.17021],[5.75997,45.16964],[5.76001,45.16961],[5.7602,45.16945],[5.76072,45.16902],[5.76114,45.16867],[5.76149,45.16837],[5.76172,45.16817],[5.76209,45.16785],[5.76212,45.16782],[5.76221,45.16774],[5.76225,45.16775],[5.76226,45.16777],[5.7623,45.16782],[5.76235,45.16788],[5.76246,45.16802],[5.76249,45.16807],[5.7626,45.16821],[5.76265,45.16827],[5.76268,45.16832],[5.76269,45.16833],[5.76283,45.16851],[5.76287,45.16858],[5.763,45.16875],[5.76361,45.16959],[5.76365,45.16965],[5.76371,45.16973],[5.76384,45.16991],[5.76389,45.16998],[5.76393,45.17003],[5.76394,45.17004],[5.76408,45.17023],[5.76416,45.17033],[5.76422,45.17041],[5.76429,45.17049],[5.76444,45.17071],[5.76451,45.17083],[5.76461,45.17098],[5.76475,45.17122],[5.76476,45.17125],[5.76481,45.1714],[5.76494,45.17178]]]},"properties": {"name": "Dinagat Islands"}}'
    return JSON.parse(ligne);
  }


  async getlignes(){
    const response = await fetch('https://data.mobilites-m.fr/api/lines/json?types=ligne&reseaux=SEM');
    const data = await response.json();
    console.log(data);

    console.log('Je suis dans'+this.lignes);
    let test: any = JSON.stringify(data.features);
    this.lignes=test;

  }

  async tstgetlignes(){
    const response = await fetch('https://data.mobilites-m.fr/api/lines/json?types=ligne&reseaux=SEM');
    const data = await response.json();
    const test = JSON.parse(data)
  }
}
